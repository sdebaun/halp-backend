type Detail {
  id: String!
  text: String!
}

enum SentPersonState {
  sent
  confirmed
  noshow
}

type SentPerson {
  id: String!
  name: String!
  email: String
  state: SentPersonState!
  createdAt: String!
  confirmedAt: String
}

type SentPersonsCounts {
  sent: Int
  confirmed: Int
  noshow: Int
}
type SentPersonLists {
  sent: [SentPerson]!
  confirmed: [SentPerson]!
  noshow: [SentPerson]!
}

enum ProjectState {
  active
  closed
  old
}

type Project {
  id: ID!
  title: String!
  sourceGroup: String!
  pitch: String!
  needStart: String!
  needEnd: String!
  state: ProjectState!
  contactMethod: String!
  contactAddress: String!
  contactName: String!
  details: [Detail]
  sentPersons: SentPersonLists!
  sentPersonsNeeded: Int
  sentPersonCounts: SentPersonsCounts!
  sentPersonsScore: Float
  sentPersonsCount: Int
}

type ProjectCounts {
  active: Int
  closed: Int
  old: Int
}

type Query {
  getProject(id: String!): Project
  projectsAll: [Project]
  projectsByState(state: String!): [Project]
  projectsActive: [Project]
  projectsOld: [Project]
  projectsClosed: [Project]
  projectCounts: ProjectCounts!
}

type Mutation {
  createProject(
    title: String!,
    pitch: String!,
    sourceGroup: String!,
    needStart: String!,
    needEnd: String!,
    contactMethod: String!,
    contactAddress: String!,
    contactName: String!,
    sentPersonsNeeded: Int!,
  ): Project

  copyProject(id: String!): Project

  deleteProject(id: String!): String

  updateProject(
    id: String!,
    title: String,
    pitch: String,
    sourceGroup: String,
    needStart: String,
    needEnd: String,
    contactMethod: String,
    contactAddress: String,
    contactName: String,
    sentPersonsNeeded: Int,
  ): Project

  addProjectDetail(projectId: String!, text: String!): Detail

  deleteProjectDetail(id: String!): String

  updateProjectDetail(id: String!, text: String!): Detail

  addProjectSentPerson(projectId: String!, name: String!, email: String, state: String): SentPerson

  deleteProjectSentPerson(id: String!): String

  updateProjectSentPerson(id: String!, state: String!): SentPerson
}

type Subscription {
  projectAdded: Project
  projectChanged: Project
  projectDeleted: String
  projectCountsChanged: ProjectCounts
}